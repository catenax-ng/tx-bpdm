backend:
  ingress:
    enabled: true
    name: "edc-sharing-member-backend"
    hosts:
      - host: sharing-member-edc-backend.dev.demo.catena-x.net
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: tls-secret
        hosts:
          - sharing-member-edc-backend.dev.demo.catena-x.net
txdc:
  dataplane:
    ingresses:
      - enabled: true
        hostname: "sharing-member-edc.dev.demo.catena-x.net"
        endpoints:
          - public
        className: "nginx"
        # -- Enables TLS on the ingress resource
        tls:
          enabled: true
          secretName: tls-secret
  controlplane:
    endpoints:
      data:
        authKey: <path:bpdm/data/dev/edc/sharing-member#controlplane-auth>
    ingresses:
      - enabled: true
        hostname: "sharing-member-edc.dev.demo.catena-x.net"
        endpoints:
          - data
          - ids
        className: "nginx"
        # -- Enables TLS on the ingress resource
        tls:
          enabled: true
          secretName: tls-secret
  daps:
    clientId: B6:FB:F8:24:80:DB:2E:CF:8B:B9:82:B2:20:28:B0:CC:28:BE:24:4B:keyid:B6:FB:F8:24:80:DB:2E:CF:8B:B9:82:B2:20:28:B0:CC:28:BE:24:4B
  backendService:
    httpProxyTokenReceiverUrl: "http://edc-sharing-member-backend"
  postgresql:
    jdbcUrl: "jdbc:postgresql://edc-sharing-member-postgres:5432/edc"
  vault:
    hashicorp:
      token: <path:bpdm/data/dev/edc/sharing-member#vault-token>
      paths:
        secret: "/v1/bpdm"
    secretNames:
      dapsPrivateKey: dev/edc/sharing-member/DAPS_PRIVATE_KEY
      dapsPublicKey: dev/edc/sharing-member/DAPS_PUBLIC_KEY
      transferProxyTokenEncryptionAesKey: dev/edc/sharing-member/DATA_ENCRYPTION_KEYS_ALIAS
      transferProxyTokenSignerPrivateKey: dev/edc/sharing-member/DAPS_PRIVATE_KEY
      transferProxyTokenSignerPublicKey: dev/edc/sharing-member/DAPS_PUBLIC_KEY